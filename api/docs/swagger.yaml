definitions:
  models.ComponentInput:
    properties:
      name:
        type: string
      properties:
        additionalProperties: true
        type: object
      type:
        $ref: '#/definitions/models.ComponentType'
    required:
    - name
    - type
    type: object
  models.ComponentResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
  models.ComponentType:
    enum:
    - CPU
    - GPU
    - RAM
    type: string
    x-enum-varnames:
    - CPU
    - GPU
    - RAM
info:
  contact: {}
  title: PC Microservice documentation
  version: 0.0.5
paths:
  /component:
    get:
      description: Endpoint will get the components that match the pagination parameters
      parameters:
      - description: Skip
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Filter
        in: query
        name: filter
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComponentResponse'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get components with pagination
      tags:
      - Components
    post:
      description: Batch create multiple components
      parameters:
      - description: Components
        in: body
        name: components
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ComponentInput'
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComponentResponse'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Batch create multiple components
      tags:
      - Components
  /component/{id}:
    get:
      description: Get one component by id
      parameters:
      - description: Component ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComponentResponse'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get one component by id
      tags:
      - Components
  /component/check:
    post:
      description: Check if components already exist
      parameters:
      - description: Component Names
        in: body
        name: components
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComponentResponse'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Check if components already exist
      tags:
      - Components
swagger: "2.0"
